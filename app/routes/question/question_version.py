# -*- coding: utf-8 -*-
"""question_version.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1iKqBr2dzbTYh5eQQyU-MaERSVOF7omZA
"""

from fastapi import APIRouter, HTTPException
from pydantic import BaseModel
import os, json
from app.services.question.question_model_loader import load_question_model
from app.models import question_model

router = APIRouter()

# 경로 설정 ( 현재 사용 모델 )
BASE_PATH = os.path.join(os.path.dirname(__file__), '..', '..', '..')
CURRENT_MODEL_PATH = os.path.join(BASE_PATH, 'app', 'models', 'question', 'question_model_run.json')

# 요청 형식
class ModelLoadRequest(BaseModel):
    loadModelName: str

@router.post("/set_question")
def load_model(data: ModelLoadRequest):
    model_name = data.loadModelName
    try:
        model, tokenizer = load_question_model(model_name)
    except Exception as e:
        raise HTTPException(status_code=500, detail=f"로딩 실패: {e}")

    # 현재 상태에 반영
    question_model.current_model = model
    question_model.current_tokenizer = tokenizer
    question_model.current_version = model_name

    # 현재 모델 json 저장
    with open(CURRENT_MODEL_PATH, "w", encoding="utf-8") as f:
        json.dump({ "modelName": model_name }, f, indent=2)

    return { "message": f"모델 '{model_name}' 로드 완료." }